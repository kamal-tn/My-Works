var longestCommonSubsequence = function(text1, text2) {
    
   function lcs(str1, str2, s1, s2, dp) {

  if (s1 === str1.length || s2 === str2.length) return 0;

  if (dp[s2][s1]) return dp[s2][s1];

  if (str1[s1] === str2[s2]) {
    dp[s2][s1] = 1 + lcs(str1, str2, s1 + 1, s2 + 1, dp);
    return dp[s2][s1];
  }
  dp[s2][s1 + 1] = lcs(str1, str2, s1 + 1, s2, dp);
  dp[s2 + 1][s1] = lcs(str1, str2, s1, s2 + 1, dp);
  dp[s2][s1] = Math.max(dp[s2][s1 + 1], dp[s2 + 1][s1]);
  return dp[s2][s1];
}
    
   let dp = new Array (text2.length+1).fill (new Array(text1.length).fill(null))
   return lcs(text1,text2,0,0,dp)
};